<?php


/**
 * This class defines the structure of the 'stat_money_daily' table.
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Wed Jun  1 18:48:14 2011
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class StatMoneyDailyTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.StatMoneyDailyTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('stat_money_daily');
		$this->setPhpName('StatMoneyDaily');
		$this->setClassname('StatMoneyDaily');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		// columns
		$this->addPrimaryKey('ID', 'Id', 'INTEGER', true, 11, null);
		$this->addColumn('DATE', 'Date', 'DATE', true, null, null);
		$this->addColumn('TURNOVER', 'Turnover', 'INTEGER', true, 11, null);
		$this->addColumn('TURNOVER_POINTS', 'TurnoverPoints', 'INTEGER', true, 11, null);
		$this->addColumn('REVENUE', 'Revenue', 'INTEGER', true, 11, null);
		$this->addColumn('REVENUE_POINTS', 'RevenuePoints', 'INTEGER', true, 11, null);
		$this->addColumn('PAY_COUNT', 'PayCount', 'INTEGER', true, 11, null);
		$this->addColumn('AVG_CHECK', 'AvgCheck', 'FLOAT', true, null, null);
		$this->addColumn('AVG_CHECK_POINTS', 'AvgCheckPoints', 'FLOAT', true, null, null);
		$this->addColumn('INCOMING_FUNDS', 'IncomingFunds', 'INTEGER', true, 11, null);
		$this->addColumn('INCOMING_FUNDS_POINTS', 'IncomingFundsPoints', 'INTEGER', true, 11, null);
		$this->addColumn('OUTGOING_FUNDS', 'OutgoingFunds', 'INTEGER', true, 11, null);
		$this->addColumn('OUTGOING_FUNDS_POINTS', 'OutgoingFundsPoints', 'INTEGER', true, 11, null);
		$this->addColumn('DIFF_FUNDS', 'DiffFunds', 'INTEGER', true, 11, null);
		$this->addColumn('DIFF_FUNDS_POINTS', 'DiffFundsPoints', 'INTEGER', true, 11, null);
		$this->addColumn('AVG_AGENT_REVENUE', 'AvgAgentRevenue', 'FLOAT', true, null, null);
		$this->addColumn('AVG_AGENT_REVENUE_POINTS', 'AvgAgentRevenuePoints', 'FLOAT', true, null, null);
		$this->addColumn('AVG_ADVERT_COST', 'AvgAdvertCost', 'FLOAT', true, null, null);
		$this->addColumn('AVG_ADVERT_COST_POINTS', 'AvgAdvertCostPoints', 'FLOAT', true, null, null);
		$this->addColumn('AVG_ACTIVE_AGENT_REVERNUE', 'AvgActiveAgentRevernue', 'FLOAT', true, null, null);
		$this->addColumn('AVG_ACTIVE_AGENT_REVENUE_POINTS', 'AvgActiveAgentRevenuePoints', 'FLOAT', true, null, null);
		$this->addColumn('AVG_ACTIVE_ADVERT_COST', 'AvgActiveAdvertCost', 'FLOAT', true, null, null);
		$this->addColumn('AVG_ACTIVE_ADVERT_COST_POINTS', 'AvgActiveAdvertCostPoints', 'FLOAT', true, null, null);
		$this->addColumn('AVG_CLICK_COST', 'AvgClickCost', 'FLOAT', true, null, null);
		$this->addColumn('AVG_CLICK_COST_POINTS', 'AvgClickCostPoints', 'FLOAT', true, null, null);
		$this->addColumn('AVG_CLICK_REVENUE', 'AvgClickRevenue', 'FLOAT', true, null, null);
		$this->addColumn('AVG_CLICK_REVENUE_POINTS', 'AvgClickRevenuePoints', 'FLOAT', true, null, null);
		$this->addColumn('ARPU', 'Arpu', 'FLOAT', true, null, null);
		$this->addColumn('ARPU_POINTS', 'ArpuPoints', 'FLOAT', true, null, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // StatMoneyDailyTableMap
